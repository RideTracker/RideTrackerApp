run-name: Build Android
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to build, e.g. 0.9.0"
        default: "0.9.0"
        required: true
        type: string
      versionCode:
        description: "Android version code to build"
        required: true
        type: string
      environment:
        description: "Environment for the app only, e.g. dev, staging, production"
        default: "staging"
        required: true
        type: string
      service:
        description: "Service API endpoint"
        default: "https://staging.service.ridetracker.app"
        required: true
        type: string
      avatarService:
        description: "Avatar Service API endpoint"
        default: "https://staging.avatar-service.ridetracker.app"
        required: true
        type: string
      routeService:
        description: "Route Service API endpoint"
        default: "https://staging.route-service.ridetracker.app"
        required: true
        type: string
      images:
        description: "Images endpoint"
        default: "https://ridetracker.app/cdn-cgi/imagedelivery/iF-n-0zUOubWqw15Yx-oAg"
        required: true
        type: string
jobs:
  build:
    name: Build android-${{ inputs.versionCode }}-${{ inputs.version }}-${{ inputs.environment }}
    runs-on: ubuntu-20.04
    permissions: read-all
    steps:
      - uses: actions/checkout@v3
      - run: echo "`jq '.expo.android=${{ inputs.versionCode }}' app.json`" > app.json
      - uses: actions/setup-node@v3
      - run: |
          echo "//npm.pkg.github.com/:_authToken=${{secrets.GITHUB_TOKEN}}" > .npmrc
          echo "@ridetracker=https://npm.pkg.github.com/" >> .npmrc       
      - run: npm ci
      - uses: actions/setup-java@v2
        id: java
        with:
          distribution: "microsoft"
          java-version: "11"
          java-package: jdk
      - uses: android-actions/setup-android@v2
      - uses: nttld/setup-ndk@v1
        id: ndk
        with:
          ndk-version: r21e
          add-to-path: true
      - run: mkdir ${{ runner.temp }}/artifacts
      - run: npx eas-cli build --platform android --local
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EAS_LOCAL_BUILD_ARTIFACTS_DIR: ${{ runner.temp }}/artifacts
          JAVA_HOME: ${{ steps.java.outputs.path }}
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_NDK_HOME: ${{ steps.ndk.outputs.ndk-path }}
          GRADLE_OPTS=-Dorg.gradle.jvmargs: '"-Xmx14g -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" -Dorg.gradle.parallel=true -Dorg.gradle.daemon=false'
      - uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: ${{ runner.temp }}/artifacts
